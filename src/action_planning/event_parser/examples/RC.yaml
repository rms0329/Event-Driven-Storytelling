scene_name: ba6fda9a-a4c1-2dca-8264-792c15aa9ef9 # hotel room
action_labels:
  - idle
  - handshake
  - hug
  - chat
  - use_smartphone
  - use_laptop
  - drink
  - eat
  - read_book
  - open_window
  - close_window

event:
  characters: [Alice, Bella]
  activity: chat with each other sitting in an area conducive to conversation

characters:
  - name: Alice
    state: idle
    current_action: idle
    position: [lie on bed_1]
    orientation: []
  - name: Bella
    state: idle
    current_action: idle
    position: [sit on chair_1]
    orientation: []

previous_events:
  # event 0
  - state: completed
    characters: [Alice]
    activity: reads a book while lying on a bed
    parsed:
      - character: Alice
        target_action: read_book
        position: [lie on bed_1]
        orientation: []
  # event 1
  - state: completed
    characters: [Bella]
    activity: works on her laptop at desk_1, which is in workspace area
    parsed:
      - character: Bella
        target_action: use_laptop
        position: [sit on chair_1]
        orientation: []

response: |
  ```python
  def parse_event():
    # The event involves two characters, 'Alice' and 'Bella', who are sitting together at coffee_table_1 to chat with each other.
    alice = get_character("Alice")
    bella = get_character("Bella")

    # Since we cannot use 'sit on' relationship for a table, we need to find the most suitable positions for both characters to sit and chat with each other.
    # According to the scene description, the coffee_table_1 is associated with chair_2 and chair_3 in the social and conversational area.
    chairs_associated_with_coffee_table_1 = get_objects_associated_with("coffee_table_1", label="chair")

    # Therefore, the most suitable positions for both characters are 'sit on chair_2' and 'sit on chair_3' respectively.
    alice_position = get_area_to_sit_on(chairs_associated_with_coffee_table_1[0])
    bella_position = get_area_to_sit_on(chairs_associated_with_coffee_table_1[1])

    # Among the available action labels, the 'chat' action is the most appropriate for both characters.
    alice_target_action = "chat"
    bella_target_action = "chat"

    # Return the parsed information
    alice.set_position(alice_position)
    alice.set_orientation("Bella")
    alice.set_target_action(alice_target_action)

    bella.set_position(bella_position)
    bella.set_orientation("Alice")
    bella.set_target_action(bella_target_action)
    
    return [alice, bella]
  ```
